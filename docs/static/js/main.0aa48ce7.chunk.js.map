{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gMAIA,SAASA,EAAOC,GACd,OACE,4BACEC,UAAU,SACVC,QAAS,kBAAMF,EAAME,YAEpBF,EAAMG,O,IAMPC,E,YACJ,WAAYJ,GAAQ,IAAD,8BACjB,4CAAMA,KACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAQ,GAJO,E,yEAQPC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAChCC,EAAgBF,KAAKN,MAAMC,WAG9BA,EAAQI,GAAOC,KAAKN,MAAMI,QAAW,IAAM,IAC3CE,KAAKG,SAAS,CACZR,UACAG,SAASE,KAAKN,MAAMI,a,mCAIXC,GAAI,IAAD,OACd,OAAO,kBAACX,EAAD,CACLI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKa,YAAYL,Q,+BAKlC,IAAIM,EACEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAO1C,OALEU,EADCC,EACK,oBAAgBA,GAEhB,yBAAqBN,KAAKN,MAAMI,QAAU,IAAM,KAItD,6BACE,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GArDTC,IAAMC,WA4DpBC,E,iLAEF,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GATSkB,IAAMC,WAuBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,U","file":"static/js/main.0aa48ce7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={() => props.onClick()}\n    >\n      {props.value}\n    </button>\n  );\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext:true\n    }\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if(calculateWinner(this.state.squares)){\n      return;\n    }\n    squares[i] =  (this.state.xIsNext) ? 'X' : 'O';\n    this.setState({\n      squares,\n      xIsNext:!this.state.xIsNext\n    })\n  }\n\n  renderSquare(i) {\n    return <Square\n      value={this.state.squares[i]}\n      onClick={() => this.handleClick(i)}\n    />;\n  }\n\n  render() {\n    let status;\n    const winner = calculateWinner(this.state.squares);\n    if(winner){\n      status = `Winner is ${winner}`;\n    }else{\n      status = `Next Player is ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board/>\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}